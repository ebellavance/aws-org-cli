// File: src/commands/clean.ts
// This file implements functionality for cleaning temporary HTML files that are
// generated by the CLI tool when displaying reports in HTML format.

import { Command } from 'commander'
import * as fs from 'fs' // Node.js file system module for file operations
import * as path from 'path' // Node.js path module for handling file paths
import * as os from 'os' // Node.js OS module for OS-specific functionality

/**
 * Register the clean command with the CLI program
 *
 * This function adds the 'clean-temp' command to the Commander program object,
 * allowing users to clean up temporary HTML report files via the CLI.
 *
 * @param program The Commander program instance to register the command with
 */
export function registerCleanCommands(program: Command): void {
  program
    .command('clean-temp') // Define the command name as 'clean-temp'
    .description('Clean all temporary HTML report files') // Provide a description for the command
    .action(() => {
      // Define the action to take when command is executed
      cleanTempFiles() // Call the cleanTempFiles function
    })
}

/**
 * Clean all temporary HTML files in the aws-org temp directory
 *
 * This function:
 * 1. Locates the temporary directory used by the application
 * 2. Deletes all HTML files in that directory
 * 3. Optionally removes the directory if it's empty after cleaning
 */
function cleanTempFiles(): void {
  try {
    // Get the temporary directory path - combines the OS temp directory with our app folder
    const tempDir = path.join(os.tmpdir(), 'aws-org')

    // Check if the directory exists before attempting operations
    if (!fs.existsSync(tempDir)) {
      console.log('No temporary files found.')
      return
    }

    // Get all files in the directory
    const files = fs.readdirSync(tempDir)

    // If there are no files, inform the user and exit
    if (files.length === 0) {
      console.log('No temporary files found.')
      return
    }

    // Delete each HTML file in the directory
    let deletedCount = 0
    for (const file of files) {
      // Only delete files with .html extension for safety
      if (file.endsWith('.html')) {
        fs.unlinkSync(path.join(tempDir, file)) // Delete the file
        deletedCount++ // Increment counter
      }
    }

    // Report how many files were deleted
    console.log(`Successfully deleted ${deletedCount} temporary HTML files.`)

    // Check if the directory is now empty
    const remainingFiles = fs.readdirSync(tempDir)
    if (remainingFiles.length === 0) {
      // If empty, remove the directory as well
      fs.rmdirSync(tempDir)
      console.log('Removed empty temporary directory.')
    }
  } catch (error) {
    // Handle any errors that occur during the process
    console.error('Error cleaning temporary files:', error)
    process.exit(1) // Exit with error code 1 to indicate failure
  }
}
